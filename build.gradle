apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'eclipse'

task wrapper(type: Wrapper) {
  gradleVersion = '4.3'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Define the main class for the application
mainClassName = 'au.org.dcw.socialmedia.simulation.tools.ui.SimpleTweetEditorUI'

repositories {
    jcenter()
}

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.1'
    compile 'com.google.guava:guava:23.0'
    compile 'org.jxmapviewer:jxmapviewer2:2.2'
    compile 'com.beust:jcommander:1.72'
    compile 'com.twitter:twitter-text:1.14.7'
    compile 'org.twitter4j:twitter4j-core:4.0.6'
    // CUE 2018
    compile 'org.apache.kafka:kafka-clients:2.0.0' // Kafka
    compile 'ch.qos.logback:logback-classic:1.2.3' // Kafka logging
    compile 'org.apache.httpcomponents:httpclient:4.5.6' // Apache HttpClient
    compile 'org.apache.httpcomponents:httpclient-cache:4.5.6' // Apache HttpClient dependency
    compile 'org.apache.httpcomponents:httpmime:4.5.6' // Apache HttpClient dependency
    compile 'org.apache.httpcomponents:fluent-hc:4.5.6' // Apache HttpClient dependency
}

def timestamp() {
    def date = new Date()
    return date.format('yyyyMMddHHmmss')
}

distributions {
    main {
        contents {
            from { 'README.md' }
            from { 'LICENSE' }
            from { 'twitter.properties-template' }
            from { 'proxy.properties-template' }
        }
    }
    timestamped {
        baseName = project.name + '-SNAPSHOT-' + timestamp()
        contents {
            with main.contents
        }
    }
    privileged {
        baseName = project.name + '_with-credentials-SNAPSHOT-' + timestamp()
        contents {
            with main.contents
            // include own twitter credentials
            from { 'twitter.properties' }
        }
    }
}
